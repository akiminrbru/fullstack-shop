// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post {
  id        Int @id @default(autoincrement()) 
  title     String
  description String
  slug      String
  content   Json?
  imageUrl  String
  tag       String
  readTime  Int @default(1)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id      Int @id @default(autoincrement()) 
  email   String @unique
  password String
  verifyed Boolean @default(false)
  firstName String?
  lastName String?
  birthday DateTime?
  sex      String?

  cart       Cart?

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Product {
  id            Int      @id @default(autoincrement())
  title         String 
  slug          String
  previewImage  String 
  price         Int 

  brand         Brand @relation(fields: [brandId], references: [id])
  brandId       Int 
  
  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    Int 

  reviews       Review[]

  cartItems     CartItem[]

  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model Brand {
  id            Int      @id @default(autoincrement())
  name          String @unique 
  products      Product[]

  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model Category {
  id            Int      @id @default(autoincrement())
  name          String @unique 
  slug          String @unique
  products      Product[]

  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model Review {
  id            Int      @id @default(autoincrement())
  comment       String 
  rating        Int

  product       Product @relation(fields: [productId], references: [id])
  productId     Int

  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
}

model Cart {
  id            Int @id @default(autoincrement())

  user          User? @relation(fields: [userId], references: [id])
  userId        Int?  @unique

  items         CartItem[]

  cartToken         String?

  totalAmount   Int @default(0)

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model CartItem {
  id            Int @id @default(autoincrement())

  cart          Cart @relation(fields: [cartId], references: [id])
  cartId        Int

  productItem   Product @relation(fields: [productItemId], references: [id])
  productItemId Int

  quantity      Int @default(1)


  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}